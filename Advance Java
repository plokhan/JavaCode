**********************2 May
Q.What is Maven
R.It is a repositroy, project management tool, it hold dependency for all the jars


Generating OR in Java by using java libarary

***************************

In Group id while creating Maven project com.  is a category name //domain 

And Article id is a project name.


******************* 2nd May

What is Maven?
Ans:- It is repository. It is project management tool so can hold the dependencies for required project.

lombok :- it is clear the bolier plate code

Q.What is bolier plate code?
R.The same code repeatedly created.

Generate the QR
Download the library of geneerate the qr in pom.xml file

For mysql driver version always take  less than the mysql version

All dependencies jar is saved in .m2 

 ex:- C:\Users\krishna\.m2\repository\org\hibernate\hibernate-core\5.6.0.Final\hibernate-core-5.6.0.Final.jar
 
 ******************************5th May
 Q.What is Hibernate
 R. It is ORM framework
 It act as a patch between databases and java classes
 
 Q.What is ORM
 R.
 
 Folder Structure
 hibernate.cfg.xml
 
 @Entity:- corresponding with class the tabel has in databases if not in databases should have to create
 
 @Id  :- It represent the PRIMARY KEY in databases
 
 Running simple example
 
 Bussiness Logic [Business Class ] also called as service layer
 Model Class [Entity class]


 _________________________________________________  --> Product Studennt Merchants --> Hibernated is more of Model Classes
 
 DAO [Data Access Objects] :- connction with databases
 ____________________________________________________
 
 UI Classes
 ____________________________________________________
 DTO []
 
 
 To Create tabel of so we use the Entity annotation. For this have to create file with hibernate.cfg.file
 need DOCTYPE file search on goolge hibernate cfg git
 And Copy the code in hibernate file.
 
 
 -Directly use the below sessionFactory for creating session and configuration
     SessionFactory sessionFactory  = new Configuration().configure().buildSessionFactory();
		Here we create configuration object and with the help of config create the session
	 
- Session session = sessionFactor.openSsession();

	 Boiler code :- To much code
	 
	 Do mapping in hibernate.cgf.xml  file and mention class name with fully qualified name (class name with package name)
	   ex:- <mapping class=" com.ka.getconnection.entity.Student" />
	 
 @Entity :- use for create data tabel in databases
 @Id :- use for mention PRIMARY KEY in databases
 
 commit();  :- if operation is done then comit  it on databases
 rollback(); :- if operation is not done then is rollback to pervious state
 
 *************************6th May
 
 HandsOn on hibernate

Student s1 = new Student(102, "abhay", "ME");

		Configuration cfg = new Configuration().configure();
		//cfg.addAnnotatedClass(Student.class);
		
		
		//Properties properties = cfg.getProperties();
		// properties.forEach((x , y) -> System.out.println(x+"  " + y));   --> it should be neglible
		
		
		SessionFactory sessionFacctory = cfg.buildSessionFactory();
		Session session = sessionFacctory.openSession();
		
		Transaction tx= null;
		
		try {
			tx =session.beginTransaction();
			session.save(s1);
			tx.commit();
			
			System.out.println("Transcation Successful.....");
			
		} catch (Exception e) {
			tx.rollback();
			e.printStackTrace();
			
			System.out.println("Transcation Unsuccessful ......");
			=


Can Do like this 

SessionFactory sessionFacctory = new Configuration().configure().buildSessionFactory();
		
		Session session = sessionFacctory.openSession();
		
		Transaction tx= null;


**********************************7th 	May

Hibernate Annotations  
Model 
DAO(Accessing data via DAO)
_____________________________________
LLD:- Low Level Design
HLD :- High Level Design 

DAO  :- Data Access Object


**********************************8 th May

What is POJO
Plain old java object 
Variable private getter setter, close state, no extend

Q. What is the role of toString
R. It is represent the state of the object 

		State means value of the variable
		
		
Connection Pulling:- 
	
		It is reserve the connection from the give connection is called connection pulling.
		With the session creatinig the connection and work with dtabases.

*************************************** 9th May

Write all the annotation ied in hibernate?
@Entity @Id

Also Write methods of the session class/
save 
save or Update
delete
get

**********************************12th May

What is dialect?
A dialect is a configuration setting 
that helps the ORM framework understand the specifics of a particular database system

What is session Factory?
Create a session 

Alternative ORMs instead of ORM?
MyBaties, apache openJPA

What is the advantage of hibernate?
1. Map java object to the entity tables --> primary advantage
2. frame work manage the relationship between the object and relation
3.reduce bolierplate code
4.improve the performance of application
************************************16th May
OneToOne
Use the annotiation @OneToOne when Mapping is onetoone
@Id
	int eid;
	String firstname;
	LocalDate jdate;
	
	@OneToOne
	AadharCard aadharcard;
	@OneToOne
	PassPort passport;


*************************************** 22nd May

Mapping 

When condition is OneToMany use the @OneToMany annotation 
int did;
	String dname;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "Deptid")
	List<Employee> emp;
	

****************************************23rd May
Mapping

To insert the data into existing table in databses --> use the --> @Table (name= "tableName");
To insert the varibale into particular column mention --> annotation --> @Column(name = "nameOfColumn") above the varibale

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "stud")
public class Student {
	@Id
	@Column(name = "sid")
	int id;
	@Column(name = "sname")
	String name;
	@Column(name = "scourse")
	String course;

**************************************   Html-CSS-JS Started follow the New repo *************** 




***********************5th June
Hibernate Performance Tunning

Q.What is performance tunning/
R.Not to hit unneccesary hit to databases, using the laod method 

session.load(Person.class , id);

If we use the get method then it will give the query if method is not use
For load if we not use the method then not give the load, & As well use the method then load method gives the query.
person = session.load(Person.class , id);
syso(person);

- get do eger loading and load do lazy loading

INTERVIEW QUESTION --> Difference Between load and get method in hibernate?

-Hitting Databases.... How to optimize

*************************************6th June

Demonstrating loading in Hibernate
----------------------------------

Student s1 = new Student (101, "Abhay" , "ME")  -- TRANSIENT STATE
session.save(s1)  ---> This state is PERSISTANT STATE 
If session is not connnect with databases and coming out from TRANSIENT STATE then it is  --> DETACHED STATE	

Student s1 = new Student(101, "abhay" , "ME" , 7.9f);  --> This is a  TRANSIENT STATE
|
|
try{
tx = session.beginTransaction();
session.save(s1);  
s1.setCgpa(8.9);  -->This is a PERSISTANT STATE 
tx.commit();
}catch{
tx.rollback();
e.printStackTrace();
}

s1.setCgpa(9.2) ; --> This is a DETACHED STATE
}

______________________________________________
OneToMany(cascade = CascadeType.All, fetch = FetchType.LAZY)   --> It do lazy loading(If needed then will run the query)
OneToMany(cascade = CascadeType.All, fetch = FetchType.EAGER)  --> if fetch the query if no need of data
For default EAGR loading and for OneToMany LAZY loading

List Concurrent collection Classes in Java?

What is Java?

******************************9th June
COMMUNICATION IN DIFFERENT LAYER
---------------------------------

DTO :- Data transfer object
DAO :- Data	      object

- Do Hands On data already present in database and with the help of query we see the data in backend 


******************************10th June

What is the use of @GeneratedValue(strategy = GenerationType.IDENTITY) ?
Ans :- Basically it Create it's own id if we not give the id, and if we give the id then it follow the given id.

*******************************11th June
Criteria Query
-------------------------------
try{
tx = session.begintransaction();
Criteria criteria = session.createCriteria(ClassName.class);
criteria.add(Restrictions.between("salary" , 5000.00 , 9000.00));
criteria.add(Restrictions.get("exp" , 10));
criteria.add(Restrictions.eq("city" , "Pune"));

 List list = criteria.list();
list.forEach(x -> syso(x));

tx.commit();
}


Example :- 

SessionFactory factory = new Configuration().configure().buildSessionFactory();

		Session session = factory.openSession();

		Transaction tx = null;

		try {
			tx = session.beginTransaction();

			// Normal Query Creation
			 String hql = "from Product";
			 Query<Product> query = session.createQuery(hql , Product.class);
			List<Product> list2 = query.list();
			list2.forEach(x -> System.out.println(x));
			
			System.out.println("Here All Data ..........");
			
			System.out.println("__________________________");

			// Using Criteria Query 
			Criteria criteria = session.createCriteria(Product.class);
			criteria.add(Restrictions.eq("category", "stationary"));   --> Condition as per requirement
			criteria.add(Restrictions.le("price",179.00 ));		   --> Condition as per requirement
			List list = criteria.list();
			list.forEach(x -> System.out.println(x));

			tx.commit();
		} catch (Exception e) {
			e.printStackTrace();
			tx.rollback();
		}
	}

*********************************12th June
DTO criteria together
------------------------------

try {
		tx = session.beginTransaction();
		
		CriteriaBuilder cb = session.getCriteriaBuilder(); --> build the criteria builder
		
		CriteriaQuery<EmployeeInfoDTO> cq = cb.createQuery(EmployeeInfoDTO.class);  --> create the query for that class from which data we want
		Root<Employee> root = cq.from(Employee.class);				    --> taking the data from the which class we want  
		
		cq.select(cb.construct(EmployeeInfoDTO.class, root.get("name"), root.get("role"), root.get("city")));  --> here is the which data we want for which class
		
		List<EmployeeInfoDTO> list = session.createQuery(cq).list(); --> here create query for which class we want in a list
		list.forEach(emp -> System.out.println(emp)); --> print the data from the class
		tx.commit();












		
		

